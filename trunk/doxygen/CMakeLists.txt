# $Id$
# $Name: not supported by cvs2svn $
#
# Build file for CMake in order to generate the documentation.
#

#OPTION(DOXYGEN_DOC_CREATE_PDF "Create PDF reference manual" ON)

OPTION(DOXYGEN_DOC_WITH_STATIC "Create documentation for static members" ON)
OPTION(DOXYGEN_DOC_WITH_PRIVATE "Create documentation for private members" OFF)
OPTION(DOXYGEN_DOC_WITH_LOCAL "Create documentation for local members" OFF)
OPTION(DOXYGEN_DOC_WITH_INTERNAL "Create documentation for internal features" OFF)
OPTION(DOXYGEN_DOC_GENERATE_QHP "Create Qt Help documentation." OFF)
OPTION(DOXYGEN_DOC_GENERATE_HTML "Create HTML Help documentation." ON)
OPTION(DOXYGEN_DOC_ALPHABETICAL_INDEX "Create an alphabetical index." ON)
OPTION(DOXYGEN_DOC_GENERATE_TAG_FILE "Generate a doxygen tag file." ON)

SET (DOXYGEN_IGNORE_PREFIX "sm" CACHE STRING "The prefix to ignore while sorting class names in the alphabetical index." FORCE)

MARK_AS_ADVANCED(
	DOXYGEN_DOC_WITH_PRIVATE
	DOXYGEN_DOC_WITH_STATIC
	DOXYGEN_DOC_WITH_LOCAL
	DOXYGEN_DOC_WITH_INTERNAL
)

# ---------------------------------
# Cmake modules needed
# ---------------------------------
#FIND_PACKAGE(HTMLHelp)
#FIND_PACKAGE(LATEX)

IF(DOXYGEN_DOC_ALPHABETICAL_INDEX)
	SET(DOXYGEN_ALPHABETICAL_INDEX YES)
ELSE(DOXYGEN_DOC_ALPHABETICAL_INDEX)
	SET(DOXYGEN_ALPHABETICAL_INDEX NO)
ENDIF(DOXYGEN_DOC_ALPHABETICAL_INDEX)



IF(DOXYGEN_DOC_GENERATE_HTML)
	SET(DOXYGEN_HTML YES)
	SET (DOXYGEN_HTML_PATH "html" CACHE STRING "Path for html output relative to the documentation folder." FORCE)
ELSE(DOXYGEN_DOC_GENERATE_HTML)
	SET(DOXYGEN_HTML NO)
ENDIF(DOXYGEN_DOC_GENERATE_HTML)

#IF (HTML_HELP_COMPILER)
#  SET(DOXYGEN_HTMLHELP YES)
#ELSE (HTML_HELP_COMPILER)
#  SET(DOXYGEN_HTMLHELP NO)
#ENDIF (HTML_HELP_COMPILER)

#IF (LATEX_COMPILER OR PDFLATEX_COMPILER)
#  SET(DOXYGEN_LATEX YES)
#ELSE (LATEX_COMPILER OR PDFLATEX_COMPILER)
  SET(DOXYGEN_LATEX NO)
#ENDIF (LATEX_COMPILER OR PDFLATEX_COMPILER)

#IF (PDFLATEX_COMPILER AND DOXYGEN_DOC_CREATE_PDF)
#  SET(DOXYGEN_PDFLATEX YES)
#ELSE (PDFLATEX_COMPILER AND DOXYGEN_DOC_CREATE_PDF)
  SET(DOXYGEN_PDFLATEX NO)
#ENDIF (PDFLATEX_COMPILER AND DOXYGEN_DOC_CREATE_PDF)

IF (DOXYGEN_DOC_CREATE_PDF)
  SET(DOXYGEN_PDF_HYPERLINKS YES)
ELSE (DOXYGEN_DOC_CREATE_PDF)
  SET(DOXYGEN_PDF_HYPERLINKS NO)
ENDIF (DOXYGEN_DOC_CREATE_PDF)


IF (DOXYGEN_DOC_WITH_PRIVATE)
  SET(DOXYGEN_EXTRACT_PRIVATE YES)
ELSE (DOXYGEN_DOC_WITH_PRIVATE)
  SET(DOXYGEN_EXTRACT_PRIVATE NO)
ENDIF (DOXYGEN_DOC_WITH_PRIVATE)

IF (DOXYGEN_DOC_WITH_STATIC)
  SET(DOXYGEN_EXTRACT_STATIC YES)
ELSE (DOXYGEN_DOC_WITH_STATIC)
  SET(DOXYGEN_EXTRACT_STATIC NO)
ENDIF (DOXYGEN_DOC_WITH_STATIC)

IF (DOXYGEN_DOC_WITH_LOCAL)
  SET(DOXYGEN_EXTRACT_LOCAL YES)
ELSE (DOXYGEN_DOC_WITH_LOCAL)
  SET(DOXYGEN_EXTRACT_LOCAL NO)
ENDIF (DOXYGEN_DOC_WITH_LOCAL)

IF (DOXYGEN_DOC_WITH_INTERNAL)
  SET(DOXYGEN_EXTRACT_INTERNAL YES)
ELSE (DOXYGEN_DOC_WITH_INTERNAL)
  SET(DOXYGEN_EXTRACT_INTERNAL NO)
ENDIF (DOXYGEN_DOC_WITH_INTERNAL)

IF(DOXYGEN_DOC_GENERATE_QHP)
    FIND_PACKAGE(Qt4 REQUIRED)
	SET(DOXYGEN_QHP YES)
ELSE(DOXYGEN_DOC_GENERATE_QHP)
	SET(DOXYGEN_QHP NO)
ENDIF(DOXYGEN_DOC_GENERATE_QHP)

SET(DOXYGEN_LANGUAGE "English" CACHE STRING "Language used by doxygen")
MARK_AS_ADVANCED(DOXYGEN_LANGUAGE)

SET(DOXYGEN_OUTPUT_DIR documentation)
STRING(REGEX REPLACE ";" " " DOXYGEN_INPUT_LIST "${DOXYGEN_SOURCE_DIR}")

IF(DOXYGEN_DOC_GENERATE_TAG_FILE)
	SET(DOXYGEN_GENERATE_TAG_FILE "${DOXYGEN_OUTPUT_DIR}/${PROJECT_NAME}.tag")
ELSE(DOXYGEN_DOC_GENERATE_TAG_FILE)
	SET(DOXYGEN_GENERATE_TAG_FILE "")
ENDIF(DOXYGEN_DOC_GENERATE_TAG_FILE)

CONFIGURE_FILE(doxygen.conf.in ${CMAKE_CURRENT_BINARY_DIR}/doxygen.conf)

GENERATE_DOCUMENTATION(doxygen.conf)

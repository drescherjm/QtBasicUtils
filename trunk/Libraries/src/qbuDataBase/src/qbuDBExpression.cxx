#include "qbuDatabasePCH.h"

#include "qbuDataBase/qbuDBExpression.h"
#include "qbuDataBase/qbuDBColumnDef.h"
#include <memory>

/////////////////////////////////////////////////////////////////////////////////////////

class qbuDBExpression::qbuPrivate
{
public:
	QString m_strExpression;
};

/////////////////////////////////////////////////////////////////////////////////////////

qbuDBExpression::qbuDBExpression() : m_pPrivate{ std::make_unique<qbuPrivate>()}
{

}

/////////////////////////////////////////////////////////////////////////////////////////

qbuDBExpression::qbuDBExpression(const qbuDBExpression & other) : m_pPrivate{ std::make_unique<qbuPrivate>() }
{
	copy(other);
}

/////////////////////////////////////////////////////////////////////////////////////////

qbuDBExpression::qbuDBExpression(const qbuDBColDef & colDef0) : m_pPrivate{ std::make_unique<qbuPrivate>() }
{
	m_pPrivate->m_strExpression = colDef0.getFullString();
}

/////////////////////////////////////////////////////////////////////////////////////////

qbuDBExpression::~qbuDBExpression()
{

}

/////////////////////////////////////////////////////////////////////////////////////////

QString qbuDBExpression::toString(bool *bOK /*= nullptr*/) const
{
	return m_pPrivate->m_strExpression;
}

/////////////////////////////////////////////////////////////////////////////////////////

bool qbuDBExpression::isValid() const
{
	return !isEmpty();
}

/////////////////////////////////////////////////////////////////////////////////////////

bool qbuDBExpression::isEmpty() const
{
	return m_pPrivate->m_strExpression.isEmpty();
}

/////////////////////////////////////////////////////////////////////////////////////////

void qbuDBExpression::copy(const qbuDBExpression & other)
{
	m_pPrivate->m_strExpression = other.m_pPrivate->m_strExpression;
}

/////////////////////////////////////////////////////////////////////////////////////////

qbuDBExpression& qbuDBExpression::operator=(const qbuDBExpression & other)
{
	if (&other != this) {
		copy(other);
	}
	return *this;
}

/////////////////////////////////////////////////////////////////////////////////////////

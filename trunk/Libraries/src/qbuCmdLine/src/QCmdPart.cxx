#include "qbuCmdLinePCH.h"

#include "qbuCmdLine/QCmdPart.h"
#include "qbuCmdLine/QCmdParseError.h"

/////////////////////////////////////////////////////////////////////////////////////////

QCmdPart::QCmdPart(QString strDescription, QString strExplanation) : 
	m_strDescription(strDescription), m_strExplanation(strExplanation),
	m_bHidden(false)
{
}
/////////////////////////////////////////////////////////////////////////////////////////

QCmdPart::QCmdPart( const QCmdPart & other )
{
	copy(other);
}

/////////////////////////////////////////////////////////////////////////////////////////

void QCmdPart::Initialize()
{
	m_bValueSet = false;
}

/////////////////////////////////////////////////////////////////////////////////////////

bool QCmdPart::HasValueBeenSet()
{
	return m_bValueSet;
}

/////////////////////////////////////////////////////////////////////////////////////////

int QCmdPart::MarkSet()
{
	int retVal = 0;

	if ( !HasValueBeenSet() ) {
		m_bValueSet = true;
	}
	else
	{
		retVal = QCmdParseError::PARAM_ALLREADY_SET;	
	}
	return retVal;
}
/////////////////////////////////////////////////////////////////////////////////////////

void QCmdPart::copy( const QCmdPart & other )
{
	m_bHidden = other.m_bHidden;
	m_bValueSet = other.m_bValueSet;
	m_strDescription = other.m_strDescription;
	m_strExplanation = other.m_strExplanation;
}
/////////////////////////////////////////////////////////////////////////////////////////

QCmdPart& QCmdPart::operator=( const QCmdPart & other )
{
	if ( &other != this ) {
		destroy();
		copy(other);
	}
	return (*this);
}

/////////////////////////////////////////////////////////////////////////////////////////

void QCmdPart::destroy()
{

}

/////////////////////////////////////////////////////////////////////////////////////////

void QCmdPart::MarkHidden( bool bHidden )
{
	m_bHidden = bHidden;
}

/////////////////////////////////////////////////////////////////////////////////////////

bool QCmdPart::isHidden()
{
	return m_bHidden;
}

/////////////////////////////////////////////////////////////////////////////////////////
